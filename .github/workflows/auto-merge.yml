name: Auto Merge

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]

jobs:
  auto-merge:
    if: |
      github.event.pull_request.base.ref == 'main' &&
      !github.event.pull_request.draft
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.RELEASE_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const isOwner = pr.user.login === 'dikshantsingh510';
            
            // Check for [automerge] keyword
            const commits = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            
            const hasAutomerge = commits.data.some(c => 
              c.commit.message.includes('[automerge]')
            );
            
            if (!hasAutomerge) {
              console.log('‚è≠Ô∏è No [automerge] keyword found');
              return;
            }
            
            console.log(`üöÄ Auto-merge requested by ${pr.user.login}`);
            
            // ALWAYS approve first (works for both owner and contributors)
            try {
              await github.rest.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                event: 'APPROVE',
                body: isOwner ? '‚úÖ Auto-approved by owner' : '‚úÖ Auto-approved after manual review'
              });
              console.log('‚úÖ PR approved by bot');
            } catch (error) {
              console.log('‚ÑπÔ∏è Could not approve (might already be approved)');
            }
            
            // Wait a moment for approval to register
            await new Promise(resolve => setTimeout(resolve, 3000));
            
            // For non-owner, double-check manual approval exists
            if (!isOwner) {
              const reviews = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number
              });
              
              const manualApproval = reviews.data.some(r => 
                r.state === 'APPROVED' && r.user.login !== 'github-actions[bot]'
              );
              
              if (!manualApproval) {
                console.log('‚è≥ Non-owner PR needs manual approval first');
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: '‚è≥ **Auto-merge requested** but waiting for manual approval from @dikshantsingh510'
                });
                return;
              }
            }
            
            // Now attempt merge
            try {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                merge_method: 'squash',
                commit_title: `${pr.title} (#${pr.number})`,
                commit_message: `Auto-merged via [automerge] keyword\n\n${pr.body || ''}`
              });
              
              console.log('‚úÖ PR auto-merged successfully');
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `üéâ **Auto-merged successfully!**\n\n${isOwner ? 'üîë Owner privileges used' : 'üë• Manual approval satisfied'}`
              });
              
            } catch (error) {
              console.error('‚ùå Merge failed:', error.message);
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `‚ùå **Auto-merge failed**: ${error.message}\n\nPlease merge manually or check repository rules.`
              });
            }
